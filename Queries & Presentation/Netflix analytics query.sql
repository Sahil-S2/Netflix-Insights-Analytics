CREATE DATABASE NETFLIX_ANALYTICS;

USE NETFLIX_ANALYTICS;

SELECT * FROM CREDITS;

SELECT * FROM TITLES;

-- Content Strategy & Growth 

-- 1. What is the `year-over-year growth` in Netflix content production across different genres?

WITH GENRE_SPLIT AS(
SELECT
      RELEASE_YEAR,
	  TRIM(VALUE) AS GENRES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
),
GENRE_PRODUCTION AS(
SELECT
      RELEASE_YEAR,
	  GENRES,
	  COUNT(*) AS TOTAL_TITLES
FROM GENRE_SPLIT
GROUP BY RELEASE_YEAR, GENRES
),
PREV_YEAR_PRODUCTIONS AS (
SELECT
     RELEASE_YEAR,
	 GENRES,
	 TOTAL_TITLES AS CURRENT_YEAR_TITLES,
	 LAG(TOTAL_TITLES) OVER (PARTITION BY GENRES ORDER BY RELEASE_YEAR) AS PREV_YEAR_TITLES
FROM GENRE_PRODUCTION
)
SELECT
      RELEASE_YEAR,
	  GENRES,
	  CURRENT_YEAR_TITLES ,
	  PREV_YEAR_TITLES,
	  CURRENT_YEAR_TITLES - PREV_YEAR_TITLES AS YOY_GROWTH,
	  CONCAT(CAST(ROUND((CURRENT_YEAR_TITLES - PREV_YEAR_TITLES)*100/CURRENT_YEAR_TITLES,2) AS VARCHAR(255)),'%') AS GROWTH_PERCENTAGE
FROM PREV_YEAR_PRODUCTIONS;



-- 2. How does the `runtime of movies & TV shows` vary across different `genres`?  

WITH GENRE_SPLIT AS(
SELECT
      TYPE AS SHOW_TYPE,
	  RUNTIME,
	  TRIM(VALUE) AS GENRES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
)
SELECT
      GENRES,
	  SHOW_TYPE,
	  COUNT(*) AS TOTAL_SHOWS,
	  MAX(RUNTIME) AS MAX_RUNTIME,
	  MIN(RUNTIME) AS MIN_RUNTIME,
	  ROUND(AVG(CAST(RUNTIME AS FLOAT)),2) AS AVG_RUNTIME,
	  ROUND(STDEV(CAST(RUNTIME AS FLOAT)),2) AS STDEV_RUNTIME
FROM GENRE_SPLIT
GROUP BY GENRES, SHOW_TYPE;



-- 3. Which `countries` are producing the `most content` on Netflix over time? 

WITH COUNTRY_SPLIT AS(
SELECT
      RELEASE_YEAR,
	  TRIM(VALUE) AS PRODUCTION_COUNTRIES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(PRODUCTION_COUNTRIES, '[', ''), ']', ''),''), ',')
),
COUNTRY_RODUCTION AS (
SELECT
     RELEASE_YEAR,
	 PRODUCTION_COUNTRIES AS COUNTRIES,
	 COUNT(*) AS TOTAL_CONTENTS
FROM COUNTRY_SPLIT
GROUP BY RELEASE_YEAR, PRODUCTION_COUNTRIES
),
RANKED_COUNTRIES AS(
SELECT
      RELEASE_YEAR,
	  COUNTRIES,
	  TOTAL_CONTENTS,
	  RANK() OVER (PARTITION BY RELEASE_YEAR ORDER BY TOTAL_CONTENTS DESC) AS RANK_PER_YEAR
FROM COUNTRY_RODUCTION
)
SELECT
      RELEASE_YEAR,
	  COUNTRIES,
	  TOTAL_CONTENTS
FROM RANKED_COUNTRIES
WHERE RANK_PER_YEAR =1;


-- 4. What are the `top-performing genres` based on `IMDB & TMDB scores`? 

WITH GENRE_SPLIT AS(
SELECT
	  IMDB_SCORE,
	  TMDB_SCORE,
	  TRIM(VALUE) AS GENRES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
)
SELECT TOP 5
      GENRES,
	  COUNT(*) AS TOTAL_SHOWS,
	  ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	  ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE
FROM GENRE_SPLIT 
GROUP BY GENRES
ORDER BY AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC; 




-- 5. What is the `average season count` for successful TV shows (IMDB Score > 7)? 


SELECT
      ROUND(AVG(CAST(SEASONS AS FLOAT)),2) AS AVG_SEASONS
FROM TITLES
WHERE TYPE = 'SHOW'
  AND IMDB_SCORE > 7
  AND SEASONS IS NOT NULL
  AND SEASONS > 0;

-- Audience Targeting & Engagement 

-- 6. Which `age certification` category has the `highest IMDB/TMDB scores`?

SELECT TOP 3
      AGE_CERTIFICATION,
	  COUNT(*) AS TOTAL_SHOWS,
	  ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	  ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE
FROM TITLES
WHERE AGE_CERTIFICATION IS NOT NULL 
GROUP BY AGE_CERTIFICATION
ORDER BY AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC; 


-- 7. How do `IMDB & TMDB scores` correlate with `runtime` across different genres?


WITH GENRE_SPLIT AS(
SELECT
      RUNTIME,
	  IMDB_SCORE,
	  TMDB_SCORE,
	  TRIM(VALUE) AS GENRES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
)
SELECT 
      GENRES,
	  ROUND(AVG(CAST(RUNTIME AS FLOAT)),2) AS AVG_RUNTIME,
	  ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	  ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE
FROM GENRE_SPLIT
WHERE RUNTIME IS NOT NULL 
  AND IMDB_SCORE IS NOT NULL
  AND TMDB_SCORE IS NOT NULL
GROUP BY GENRES
ORDER BY AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC; 


-- 8. What are the `most popular movie durations` based on audience scores & votes?

SELECT TOP 10
     RUNTIME,
	 ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE,
	 SUM(IMDB_VOTES) AS TOTAL_IMDB_VOTES
FROM TITLES
WHERE TYPE = 'MOVIE'
  AND RUNTIME IS NOT NULL 
  AND IMDB_SCORE IS NOT NULL
  AND TMDB_SCORE IS NOT NULL
  AND TMDB_POPULARITY IS NOT NULL
  AND IMDB_VOTES IS NOT NULL
GROUP BY RUNTIME
ORDER BY AVG_TMDB_POPULARITY DESC, AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC, TOTAL_IMDB_VOTES DESC; 


-- 9. How does the `popularity of titles` vary across `different production countries`?

WITH COUNTRY_SPLIT AS(
SELECT
      TMDB_POPULARITY,
	  IMDB_SCORE,
	  TMDB_SCORE,
	  TRIM(VALUE) AS PRODUCTION_COUNTRIES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(PRODUCTION_COUNTRIES, '[', ''), ']', ''),''), ',')
WHERE PRODUCTION_COUNTRIES IS NOT NULL 
  AND IMDB_SCORE IS NOT NULL
  AND TMDB_SCORE IS NOT NULL
  AND TMDB_POPULARITY IS NOT NULL
)
SELECT
     PRODUCTION_COUNTRIES,
	 COUNT(*) AS TOTAL_TITLES,
     ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE
FROM COUNTRY_SPLIT
GROUP BY  PRODUCTION_COUNTRIES
ORDER BY AVG_TMDB_POPULARITY DESC, AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC;

-- 10. Are TV shows or movies `more popular globally`, based on TMDB popularity scores? 

SELECT
      TYPE,
	  ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY
FROM TITLES
WHERE TMDB_POPULARITY IS NOT NULL
GROUP BY TYPE
ORDER BY AVG_TMDB_POPULARITY DESC;

-- TV Shows are most popular.

-- 11. What are the  top 10 production countries` producing the `highest-rated content`? 

WITH COUNTRY_SPLIT AS(
SELECT
	  IMDB_SCORE,
	  TMDB_SCORE,
	  TRIM(VALUE) AS PRODUCTION_COUNTRIES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(PRODUCTION_COUNTRIES, '[', ''), ']', ''),''), ',')
WHERE PRODUCTION_COUNTRIES IS NOT NULL 
  AND IMDB_SCORE IS NOT NULL
  AND TMDB_SCORE IS NOT NULL
)
SELECT TOP 10
     PRODUCTION_COUNTRIES,
	 COUNT(*) AS TOTAL_CONTENTS,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE
FROM COUNTRY_SPLIT
GROUP BY  PRODUCTION_COUNTRIES
ORDER BY TOTAL_CONTENTS DESC, AVG_IMDB_SCORE DESC, AVG_TMDB_SCORE DESC;


-- 12. Which genres have the `widest international reach`, appearing in multiple countries?


WITH GENRE_SPLIT AS(
SELECT 
      PRODUCTION_COUNTRIES,
	  TRIM(VALUE) AS GENRES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
),
COUNTRY_SPLIT AS(
SELECT
	  GENRES,
	  TRIM(VALUE) AS PRODUCTION_COUNTRIES
FROM GENRE_SPLIT
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(PRODUCTION_COUNTRIES, '[', ''), ']', ''),''), ',')
)
SELECT
      GENRES,
	  COUNT(DISTINCT PRODUCTION_COUNTRIES) AS COUNTRIES
FROM COUNTRY_SPLIT
GROUP BY GENRES
ORDER BY 2 DESC;

-- 13. What is the `distribution of IMDB scores` across production countries? 

WITH COUNTRY_SPLIT AS(
SELECT
	  IMDB_SCORE,
	  TRIM(VALUE) AS PRODUCTION_COUNTRIES
FROM TITLES
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(PRODUCTION_COUNTRIES, '[', ''), ']', ''),''), ',')
WHERE PRODUCTION_COUNTRIES IS NOT NULL 
  AND IMDB_SCORE IS NOT NULL
  AND TMDB_SCORE IS NOT NULL
)
SELECT
     PRODUCTION_COUNTRIES,
	 COUNT(*) AS TOTAL_TITLES,
	 ROUND(MIN(CAST(IMDB_SCORE AS FLOAT)),2) AS MIN_IMDB_SCORE,
	 ROUND(MAX(CAST(IMDB_SCORE AS FLOAT)),2) AS MAX_IMDB_SCORE,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE
FROM COUNTRY_SPLIT
GROUP BY  PRODUCTION_COUNTRIES
ORDER BY AVG_IMDB_SCORE DESC;


-- 14. How many `unique actors & directors` contribute to Netflix content each year?

WITH YEARLY_CREDITS AS(
SELECT
      T.RELEASE_YEAR,
	  NAME AS PERSON_NAME,
	  ROLE
FROM CREDITS C
JOIN TITLES T
ON C.ID = T.ID
)
SELECT
      RELEASE_YEAR,
	  COUNT(DISTINCT CASE WHEN ROLE = 'ACTOR' THEN PERSON_NAME END ) AS UNIQUE_ACTOR,
	  COUNT(DISTINCT CASE WHEN ROLE = 'DIRECTOR' THEN PERSON_NAME END ) AS UNIQUE_DIRECTOR
FROM YEARLY_CREDITS
GROUP BY RELEASE_YEAR
ORDER BY RELEASE_YEAR;


-- 15. What is the trend in `Netflix's reliance on international content` over time?  

WITH INTERNATIONAL_CONTENT AS(
SELECT
      RELEASE_YEAR,
	  COUNT(*) AS TOTAL_TITLES,
	  COUNT(CASE WHEN PRODUCTION_COUNTRIES NOT LIKE '%US%' THEN 1 END) AS INTERNATIONAL_CONTENT
FROM TITLES
GROUP BY RELEASE_YEAR
)
SELECT
      RELEASE_YEAR,
	  TOTAL_TITLES,
	  INTERNATIONAL_CONTENT,
	  CONCAT(CAST(ROUND((INTERNATIONAL_CONTENT * 100)/TOTAL_TITLES,2) AS VARCHAR(255)),'%') AS INTERNATIONAL_CONTENT_PERCENTAGE
FROM INTERNATIONAL_CONTENT
ORDER BY RELEASE_YEAR;

-- Talent & Star Power Analysis  

-- 16. Who are the `top 10 actors` with the most appearances in Netflix content? 
--     What is the `average IMDB score` for movies starring these `top actors`?

SELECT TOP 10
     NAME,
	 COUNT(C.ID) AS TOTAL_APPEARANCES,
	 ROUND(AVG(CAST(T.IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE
FROM CREDITS C
JOIN TITLES T
ON C.ID = T.ID
WHERE C.ROLE = 'ACTOR'
GROUP BY  NAME
ORDER BY TOTAL_APPEARANCES DESC;

-- 18. Which actors/directors are consistently involved in `high-rated` productions?

WITH HIGH_RATED_PRODUCTIONS AS(
SELECT
      ID,
	  TITLE,
	  IMDB_SCORE
FROM TITLES
WHERE IMDB_SCORE > 8
)
SELECT TOP 10
     C.NAME AS PERSON_NAME,
	 C.ROLE,
	 COUNT(H.ID) AS HIGH_RATED_APPEARANCES
FROM CREDITS C
JOIN HIGH_RATED_PRODUCTIONS H
ON C.ID = H.ID
WHERE C.ROLE = 'DIRECTOR'
GROUP BY C.NAME,C.ROLE 
ORDER BY HIGH_RATED_APPEARANCES DESC;


-- 19. Who are the `highest-rated directors` based on IMDB & TMDB scores? 

WITH HIGH_RATED_PRODUCTIONS AS(
SELECT
      ID,
	  TITLE,
	  IMDB_SCORE,
	  TMDB_SCORE
FROM TITLES
WHERE IMDB_SCORE > 8 AND TMDB_SCORE > 8
)
SELECT TOP 10
     C.NAME AS PERSON_NAME,
	 C.ROLE,
	 COUNT(H.ID) AS HIGH_RATED_APPEARANCES
FROM CREDITS C
JOIN HIGH_RATED_PRODUCTIONS H
ON C.ID = H.ID
WHERE C.ROLE = 'DIRECTOR'
GROUP BY C.NAME,C.ROLE 
ORDER BY HIGH_RATED_APPEARANCES DESC;

-- 20. Which actors have worked in `multiple genres`, and how do their ratings compare?

WITH GENRE_SPLIT AS(
SELECT
      C.NAME AS ACTOR_NAME,
	  TRIM(VALUE) AS GENRES,
	  T.IMDB_SCORE
FROM CREDITS C
JOIN TITLES T
ON C.ID = T.ID
CROSS APPLY STRING_SPLIT(NULLIF(REPLACE(REPLACE(GENRES, '[', ''), ']', ''),''), ',')
WHERE C.ROLE = 'ACTOR'
)
SELECT TOP 10
      ACTOR_NAME,
	  COUNT(DISTINCT GENRES) AS TOTAL_GENRES,
	  ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE
FROM GENRE_SPLIT
GROUP BY ACTOR_NAME
ORDER BY TOTAL_GENRES DESC;

--  User Engagement & Performance Metrics 
-- 21. What is the `correlation between IMDB votes and TMDB popularity`?


WITH CORR_FACTOR AS(
SELECT
     IMDB_VOTES,
	 TMDB_POPULARITY,
	 IMDB_VOTES - AVG(IMDB_VOTES) OVER() AS X,
	 TMDB_POPULARITY - AVG(TMDB_POPULARITY) OVER () AS Y
FROM TITLES
WHERE IMDB_VOTES IS NOT NULL
AND   TMDB_POPULARITY IS NOT NULL
)
SELECT
	  ROUND(SUM(X*Y)/
	  (SQRT(SUM(X*X)) * SQRT(SUM(Y*Y))),3) AS CORR_COEFFICIENT
FROM CORR_FACTOR;


-- 22. Do `older movies (pre-2000) perform better or worse` than newer content?

SELECT
     CASE 
	    WHEN RELEASE_YEAR < 2000 THEN 'OLDER (PRE-2000)'
		ELSE 'NEWER (2000 & LATER)'
	 END AS MOVIE_CATEGORY,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(TMDB_SCORE AS FLOAT)),2) AS AVG_TMDB_SCORE,
	 ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY
FROM TITLES
WHERE TYPE = 'MOVIE'
GROUP BY
     CASE 
	    WHEN RELEASE_YEAR < 2000 THEN 'OLDER (PRE-2000)'
		ELSE 'NEWER (2000 & LATER)'
	 END ;
       



-- 23. What is the `average IMDB score & votes for Netflix Originals` vs. third-party content?

WITH CONTENT_DISTRIBUTION AS(
SELECT
     IMDB_SCORE,
	 IMDB_VOTES,
	 CASE 
	     WHEN PRODUCTION_COUNTRIES LIKE '%US%' THEN 'NETFLIX-ORIGINAL'
	     ELSE 'THIRD-PARTY CONTENT' 
	 END AS CONTENT_TYPE
FROM TITLES
)
SELECT
     CONTENT_TYPE,
     ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(IMDB_VOTES AS FLOAT)),2) AS AVG_IMDB_VOTES
FROM CONTENT_DISTRIBUTION
GROUP BY CONTENT_TYPE;


-- 24. Which types of content (Movies vs. TV Shows) have the `highest audience engagement`?

SELECT
     TYPE,
	 COUNT(*) AS TOTAL_CONTENT,
	 ROUND(AVG(CAST(IMDB_SCORE AS FLOAT)),2) AS AVG_IMDB_SCORE,
	 ROUND(AVG(CAST(IMDB_VOTES AS FLOAT)),2) AS AVG_IMDB_VOTES,
	 ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY
FROM TITLES
WHERE IMDB_VOTES IS NOT NULL
AND IMDB_SCORE IS NOT NULL
AND   TMDB_POPULARITY IS NOT NULL
GROUP BY TYPE;

-- 25. What is the `average TMDB popularity trend` for content produced in the last 5 years?  

SELECT
      RELEASE_YEAR,
	  COUNT(*) AS TOTAL_TITLES,
	  ROUND(AVG(CAST(TMDB_POPULARITY AS FLOAT)),2) AS AVG_TMDB_POPULARITY
FROM TITLES
WHERE RELEASE_YEAR >= (SELECT MAX(RELEASE_YEAR) FROM TITLES) - 5
GROUP BY RELEASE_YEAR
ORDER BY RELEASE_YEAR;

